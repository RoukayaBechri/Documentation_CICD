version: '3'
services:
  jenkins:
    image: jenkins/jenkins:2.410-jdk11
    container_name: jenkins
    user: root
    ports:
      - 8099:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
    restart: always
    environment:
      - TZ=Your_Timezone
    networks:
      mynetwork:
        ipv4_address: 172.18.0.3

  nexus:
    image: sonatype/nexus3:3.54.1
    container_name: nexus
    ports:
      - 8081:8081
    volumes:
      - nexus_data:/nexus-data  

  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - db
      - elasticsearch
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_SEARCH_HOST: elasticsearch
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'false' # Disable Elasticsearch bootstrap checks
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  db:
    image: postgres:13
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
volumes:
  jenkins_home:
  nexus_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  elasticsearch_data:

networks:
  mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
      