# docker-compose.yml
version: '3.7'
services:
  jenkins:
    image: jenkins/jenkins:2.387.2-lts-jdk11
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    container_name: jenkins-lts
    volumes:
      - ~/jenkins_home:/var/jenkins_home
      - //var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    depends_on:
      - docker
    networks:
      devops:
          ipv4_address: 172.16.0.8  
  docker:
    image: docker:dind
    container_name: docker
    privileged: true
    networks:
      devops:
        ipv4_address: 172.16.0.9
    volumes:
      - /var/lib/docker
    restart: always
    environment:
      - SONARQUBE_HOST=http://sonarqube:9000
  
    
  nexus:
     image: sonatype/nexus3
     privileged: true
     user: root
     container_name: nexus
     volumes:
      - "~/nexus-data:/nexus-data"
     ports:
      - "8082:8081"
      - "8085:8085"
     networks:
       devops:
           ipv4_address: 172.16.0.3
  sonarqube:
    image: sonarqube
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      devops:
          ipv4_address: 172.16.0.10
  db:
     image: postgres
     environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
     volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data



volumes:
  nexus-data: {}
  jenkins-data: {}
  jenkins-home: {}
  sonarqube_conf: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  postgresql: {}
  postgresql_data: {}



networks:
 devops:
   driver: bridge
   ipam:
     config:
        - subnet: 172.16.0.0/16
